{"version":3,"sources":["routing/routes.ts","components/form/Form/Form.tsx","components/form/TextField.tsx","requests/common/Request.ts","pages/Login/Login.tsx","requests/auth/actions.ts","components/layout/MainLayout/MainLayout.tsx","pages/Profile/Profile.tsx","components/form/ImageField.tsx","components/form/Autocomplete/Autcomplete.styles.ts","components/form/Autocomplete/Components.tsx","components/form/Autocomplete/Autocomplete.tsx","pages/Memories/Form/MemoryForm.tsx","requests/memories/actions.ts","requests/friends/actions.ts","pages/Memories/Add/AddMemoryContainer.tsx","pages/Profile/ProfileForm/ProfileForm.tsx","pages/Profile/ProfileForm/ProfileFormContainer.tsx","pages/Memories/List/SingleMemory/SingleMemory.tsx","pages/Memories/List/List.tsx","pages/Memories/List/ListContainer.tsx","pages/Memories/List/DraftListContainer.tsx","pages/Users/User/User.tsx","pages/Users/Users.tsx","pages/Friends/FriendsContainer.tsx","pages/Users/UsersContainer.tsx","requests/users/users.ts","pages/Register/Register.tsx","pages/Memories/Edit/EditMemoryContainer.tsx","routing/Routing.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["LOGIN","Form","onSubmit","children","initialValues","props","handleSubmit","TextField","name","type","label","input","onChange","value","meta","isError","submitError","dirtySinceLastSubmit","error","touched","FormControl","InputLabel","htmlFor","Input","placeholder","FormHelperText","id","Request","a","async","url","method","body","requireAuth","headers","localStorage","getItem","fetch","process","JSON","stringify","response","ok","status","removeItem","json","useStyles","makeStyles","container","display","alignItems","height","card","width","Login","history","useHistory","classes","Container","maxWidth","className","Card","then","setItem","token","push","username","password","CardContent","Typography","variant","component","Box","flexDirection","CardActions","Button","size","color","onClick","root","justifyContent","MainLayout","React","useState","anchorEl","setAnchorEl","isMenuOpen","setMenuOpen","MenuOptions","text","icon","Inbox","AppBar","position","Toolbar","IconButton","edge","aria-label","e","Drawer","open","onClose","map","option","ListItem","button","key","ListItemIcon","ListItemText","primary","aria-controls","aria-haspopup","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","Profile","mt","mb","endIcon","Edit","Grid","direction","item","xs","sm","fontSize","toBase64","file","reader","FileReader","Promise","resolve","reject","readAsBinaryString","onload","result","btoa","onerror","image","ImageField","useRef","current","files","console","log","ref","src","theme","flexGrow","minWidth","padding","valueContainer","flexWrap","flex","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","grey","noOptionsMessage","singleValue","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","components","Control","innerProps","innerRef","selectProps","TextFieldProps","fullWidth","InputProps","inputProps","Paper","square","MultiValue","Chip","tabIndex","clsx","isFocused","onDelete","removeProps","deleteIcon","Cancel","NoOptionsMessage","Option","selected","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","Autocomplete","options","isMulti","useTheme","selectStyles","base","font","styles","mapContainer","actions","MemoryForm","onCancel","onDraftSave","onSave","friendsOptions","values","mutators","onMapClick","args","state","tools","event","changeValue","latlng","Map","center","localization","zoom","onclick","form","TileLayer","attribution","Marker","postMemory","getMemories","getMemoriesDraft","getFriends","mapFormToPayload","friends","friend","latitude","lat","longitude","lng","AddMemoryContainer","setFriends","useEffect","items","user","firstname","lastname","title","description","goBack","ProfileForm","ProfileFormContainer","itemActions","maxHeight","row","SingleMemory","isEditable","handleEdit","memory","justify","List","memories","isDraft","ListContainer","setMemories","catch","DraftListContainer","User","action","actionType","actionLabel","Users","users","FriendsContainer","deleteFriend","UsersContainer","setUsers","addFriend","Register","toString","EditMemoryContainer","params","useParams","setInitialValues","localFriends","edited","find","filter","includes","Routing","basename","exact","path","Routes","to","window","location","hostname","match","ReactDOM","render","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d027e7f8.chunk.js","sourcesContent":["export const LOGIN = '/login';\r\nexport const REGISTER = '/register';\r\nexport const PROFILE = '/profile';\r\nexport const PROFILE_EDIT = '/profile/edit';\r\nexport const MEMORIES = '/memories';\r\nexport const MEMORIES_DRAFT = '/memories/draft';\r\nexport const ADD_MEMORY = '/memory/add';\r\nexport const EDIT_MEMORY = '/memory/:id';\r\nexport const FRIENDS = '/friends';\r\nexport const USERS = '/users';","import React from \"react\";\r\nimport {Form as FinalForm, FormProps as FinalFormProps, FormRenderProps} from 'react-final-form'\r\n\r\ninterface FormProps<T> extends FinalFormProps<T> {\r\n    children: (props: FormRenderProps<T>) => React.ReactElement\r\n}\r\n\r\n\r\nexport const Form = <T extends object>({onSubmit, children, initialValues, ...props}: FormProps<T>) => {\r\n    return (\r\n        <FinalForm<T> onSubmit={onSubmit} initialValues={initialValues} {...props}>\r\n            {props => (\r\n                <form onSubmit={props.handleSubmit}>\r\n                    {children(props)}\r\n                </form>\r\n            )}\r\n        </FinalForm>)\r\n};","import React, {FC} from \"react\";\r\nimport {Field} from \"react-final-form\";\r\nimport {FormControl, FormHelperText, Input, InputLabel} from \"@material-ui/core\";\r\n\r\ninterface TextFieldProps {\r\n    name: string\r\n    type?: string\r\n    label?: string\r\n}\r\n\r\nexport const TextField: FC<TextFieldProps> = ({name, type = 'text', label = ''}) => {\r\n    return (\r\n        <Field name={name}>\r\n            {({input: {name, onChange, value, ...restInput}, meta}) => {\r\n                const isError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched;\r\n\r\n                return (\r\n                    <FormControl error={isError}>\r\n                        <InputLabel htmlFor=\"adornment-password\">{label ? label : name}</InputLabel>\r\n                        <Input\r\n                            type={type}\r\n                            value={value}\r\n                            onChange={onChange}\r\n                            placeholder={name}\r\n                        />\r\n                        <FormHelperText id=\"component-error-text\">{isError && meta.error}</FormHelperText>\r\n                    </FormControl>\r\n                )\r\n            }}\r\n        </Field>\r\n    )\r\n}","export interface RequestProps {\r\n    url: string,\r\n    method: string,\r\n    body?:  any\r\n}\r\n\r\n\r\nexport const Request = async ({url, method, body}: RequestProps, requireAuth = true) => {\r\n    const headers: Record<string, string> = {\r\n        'Content-Type': 'application/json',\r\n    };\r\n\r\n    if (requireAuth) {\r\n        headers['Authorization'] = `Bearer ${localStorage.getItem('auth')}`\r\n    }\r\n\r\n    const response = await fetch(`${process.env.REACT_APP_API_URL}${url}`, {\r\n        method,\r\n        body: JSON.stringify(body),\r\n        headers,\r\n    })\r\n\r\n    if (!response.ok) {\r\n        if (response.status === 401) {\r\n            localStorage.removeItem('auth');\r\n        }\r\n\r\n        return {\r\n            ...response,\r\n            error: true\r\n        }\r\n    }\r\n\r\n    return response.json();\r\n}","import React, {FC} from \"react\";\r\nimport {Box, Button, Card, CardActions, CardContent, Container, makeStyles, Typography} from \"@material-ui/core\";\r\nimport {Form} from \"../../components/form/Form/Form\";\r\nimport {TextField} from \"../../components/form/TextField\";\r\nimport {LoginForm} from \"./Login.types\";\r\nimport {useHistory} from \"react-router\";\r\nimport {MEMORIES, REGISTER} from \"../../routing/routes\";\r\nimport {login} from \"../../requests/auth/actions\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '100vh'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\n\r\nexport const Login: FC = () => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (value: LoginForm) => {\r\n        login(value).then((response) => {\r\n            if (response.error) {\r\n                return;\r\n            } else {\r\n                localStorage.setItem('auth', response.token);\r\n                history.push(MEMORIES);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return <Container maxWidth=\"sm\" className={classes.container}>\r\n        <Card className={classes.card}>\r\n            <Form<LoginForm> onSubmit={handleSubmit} initialValues={{username: '', password: ''}}>\r\n                {(props) => {\r\n                    return (\r\n                        <>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    Zaloguj się\r\n                                </Typography>\r\n                                <Box flexDirection='column' display='flex'>\r\n                                    <TextField name='username'/>\r\n                                    <TextField name='password' type='password'/>\r\n                                </Box>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\" variant='contained' color='primary' type=\"submit\">Zaloguj\r\n                                    się</Button>\r\n                                <Button size=\"small\" variant='outlined' color='secondary'\r\n                                        onClick={() => history.push(REGISTER)}>Zarejestruj się</Button>\r\n                            </CardActions>\r\n                        </>\r\n                    )\r\n                }}\r\n            </Form>\r\n        </Card>\r\n    </Container>\r\n}","import {Request} from \"../common/Request\";\r\n\r\n\r\nexport const register = (body: any) => Request({url: '/api/register', method: 'POST', body}, false);\r\n\r\nexport const login = (body: any) => Request({url: '/api/login', method: 'POST', body}, false);\r\n\r\nexport const getMe = () => Request({url: '/api/me', method: 'GET'});\r\n\r\nexport const editMe = (body:any) => Request({url: '/api/me', method: 'POST', body});","import React, {FC, useState} from \"react\";\r\nimport {\r\n    AppBar,\r\n    Container,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    makeStyles,\r\n    Menu,\r\n    MenuItem,\r\n    Toolbar,\r\n} from \"@material-ui/core\";\r\nimport {AccountCircle, Inbox, Menu as MenuIcon} from '@material-ui/icons';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ADD_MEMORY, FRIENDS, LOGIN, MEMORIES, MEMORIES_DRAFT, PROFILE, USERS} from \"../../../routing/routes\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        justifyContent: 'space-between',\r\n    },\r\n});\r\n\r\n\r\nexport const MainLayout: FC = ({children}) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [isProfileMenuOpen, setProfileMenuOpen] = useState(false);\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const handleLogout = () => {\r\n        history.push(LOGIN)\r\n    };\r\n\r\n    const handleIconClick = (e: any) => {\r\n        setMenuOpen(true)\r\n    };\r\n\r\n    const handleProfileClick = (e:any) =>{\r\n        setAnchorEl(e.currentTarget);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const MenuOptions = [\r\n        {\r\n            text: 'Wspomnienia',\r\n            icon: <Inbox/>,\r\n            onClick: () => {\r\n                history.push(MEMORIES);\r\n            }\r\n        },\r\n        {\r\n            text: 'Wersje robocze wspomnień',\r\n            icon: <Inbox/>,\r\n            onClick: () => {\r\n                history.push(MEMORIES_DRAFT)\r\n            }\r\n        },\r\n        {\r\n            text: 'Dodaj wspomnienie',\r\n            icon: <Inbox/>,\r\n            onClick: () => {\r\n                history.push(ADD_MEMORY)\r\n            }\r\n        },\r\n        {\r\n            text: 'Znajomi',\r\n            icon: <Inbox/>,\r\n            onClick: () => {\r\n                history.push(FRIENDS)\r\n            }\r\n        },\r\n        {\r\n            text: 'Wszyscy użytkownicy',\r\n            icon: <Inbox/>,\r\n            onClick: () => {\r\n                history.push(USERS)\r\n            }\r\n        }\r\n    ];\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar classes={classes}>\r\n                    <div>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleIconClick}>\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                        <Drawer open={isMenuOpen} onClose={() => setMenuOpen(false)}>\r\n                            <List>\r\n                                {MenuOptions.map((option) => (\r\n                                    <ListItem button key={option.text} onClick={option.onClick}>\r\n                                        <ListItemIcon>{option.icon}</ListItemIcon>\r\n                                        <ListItemText primary={option.text}/>\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </Drawer>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileClick}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle/>\r\n                        </IconButton>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            id={'menuId'}\r\n                            keepMounted\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            {/*<MenuItem onClick={() => history.push(PROFILE)}>Profil</MenuItem>*/}\r\n                            <MenuItem onClick={handleLogout}>Wyloguj</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container maxWidth='md'>\r\n                {children}\r\n            </Container>\r\n        </>\r\n    )\r\n}","import React, {FC} from \"react\";\r\nimport {MainLayout} from \"../../components/layout/MainLayout/MainLayout\";\r\nimport {Box, Button, Grid, Typography} from \"@material-ui/core\";\r\nimport {AccountCircle, Edit} from \"@material-ui/icons\";\r\nimport {PROFILE_EDIT} from \"../../routing/routes\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport const Profile: FC = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <MainLayout>\r\n                <Box mt={4}>\r\n                    <Box display='flex' justifyContent='flex-end' mb={3}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<Edit/>}\r\n                            onClick={() => history.push(PROFILE_EDIT)}\r\n                        >\r\n                            Edytuj\r\n                        </Button>\r\n                    </Box>\r\n                    <Grid container direction='row'>\r\n                        <Grid item xs={2} sm={2}>\r\n                            <AccountCircle fontSize='large'/>\r\n                        </Grid>\r\n                        <Grid item xs={10} sm={10}>\r\n                            <Typography variant=\"h6\">\r\n                                Imię\r\n                            </Typography>\r\n                            <Typography variant=\"h6\">\r\n                                Nazwisko\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </MainLayout>\r\n        </>\r\n    )\r\n}","import React, {FC, useRef} from \"react\";\r\nimport {Field} from \"react-final-form\";\r\nimport {FormControl, FormHelperText, makeStyles, Typography} from \"@material-ui/core\";\r\n\r\ninterface ImageFieldProps {\r\n    name: string\r\n    label: string;\r\n}\r\n\r\nconst toBase64 = (file: Blob) => {\r\n    const reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n        reader.readAsBinaryString(file)\r\n        reader.onload = async () => {\r\n            if(reader.result)\r\n                await resolve(btoa(reader.result as string))\r\n        };\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n        image: {\r\n            height: 400,\r\n        },\r\n    })\r\n;\r\n\r\nexport const ImageField: FC<ImageFieldProps> = ({name, label}) => {\r\n    const file = useRef(null);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Field name={name}>\r\n            {({input: {name, onChange, value, ...restInput}, meta}) => {\r\n                const isError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched;\r\n\r\n                const handleFileUpload = async () => {\r\n                    if (file && file.current) {\r\n                        // @ts-ignore-next-line\r\n                        const result = await toBase64(file.current.files[0]);\r\n                        console.log(result);\r\n                        onChange(result);\r\n                    }\r\n                };\r\n\r\n                return (\r\n                    <FormControl error={isError}>\r\n                        <Typography variant=\"h6\" component=\"h6\">\r\n                            {label}\r\n                        </Typography>\r\n                        <input type='file' onChange={handleFileUpload} ref={file}/>\r\n                        {value && <img src={`data:image/png;base64,${value}`} className={classes.image}/>}\r\n                        <FormHelperText id=\"component-error-text\">{isError && meta.error}</FormHelperText>\r\n                    </FormControl>\r\n                )\r\n            }}\r\n        </Field>\r\n    )\r\n}","import {makeStyles} from \"@material-ui/core\";\r\nimport {emphasize} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290,\r\n    },\r\n    input: {\r\n        display: 'flex',\r\n        padding: 0,\r\n        height: 'auto',\r\n    },\r\n    valueContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25),\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n            0.08,\r\n        ),\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    singleValue: {\r\n        fontSize: 16,\r\n    },\r\n    placeholder: {\r\n        position: 'absolute',\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16,\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        marginTop: theme.spacing(1),\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    divider: {\r\n        height: theme.spacing(2),\r\n    },\r\n}));","import React from \"react\";\r\nimport {Chip, MenuItem, Paper, TextField, Typography} from \"@material-ui/core\";\r\nimport clsx from 'clsx';\r\nimport {Cancel} from \"@material-ui/icons\";\r\n\r\nfunction NoOptionsMessage(props: any) {\r\n    return (\r\n        <Typography\r\n            color=\"textSecondary\"\r\n            className={props.selectProps.classes.noOptionsMessage}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction inputComponent({inputRef, ...props}: any) {\r\n    return <div ref={inputRef} {...props} />;\r\n}\r\n\r\nfunction Control(props: any) {\r\n    const {\r\n        children,\r\n        innerProps,\r\n        innerRef,\r\n        selectProps: {classes, TextFieldProps},\r\n    } = props;\r\n\r\n    return (\r\n        <TextField\r\n            fullWidth\r\n            InputProps={{\r\n                inputComponent,\r\n                inputProps: {\r\n                    className: classes.input,\r\n                    ref: innerRef,\r\n                    children,\r\n                    ...innerProps,\r\n                },\r\n            }}\r\n            {...TextFieldProps}\r\n        />\r\n    );\r\n}\r\n\r\nfunction Option(props: any) {\r\n    return (\r\n        <MenuItem\r\n            ref={props.innerRef}\r\n            selected={props.isFocused}\r\n            component=\"div\"\r\n            style={{\r\n                fontWeight: props.isSelected ? 500 : 400,\r\n            }}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\n\r\nfunction Placeholder(props: any) {\r\n    const {selectProps, innerProps = {}, children} = props;\r\n    return (\r\n        <Typography color=\"textSecondary\" className={selectProps.classes.placeholder} {...innerProps}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction SingleValue(props: any) {\r\n    return (\r\n        <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction ValueContainer(props: any) {\r\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nfunction MultiValue(props: any) {\r\n    return (\r\n        <Chip\r\n            tabIndex={-1}\r\n            label={props.children}\r\n            className={clsx(props.selectProps.classes.chip, {\r\n                [props.selectProps.classes.chipFocused]: props.isFocused,\r\n            })}\r\n            onDelete={props.removeProps.onClick}\r\n            deleteIcon={<Cancel {...props.removeProps} />}\r\n        />\r\n    );\r\n}\r\n\r\nfunction Menu(props: any) {\r\n    return (\r\n        <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n            {props.children}\r\n        </Paper>\r\n    );\r\n}\r\n\r\n\r\nexport const components = {\r\n    Control,\r\n    Menu,\r\n    MultiValue,\r\n    NoOptionsMessage,\r\n    Option,\r\n    Placeholder,\r\n    SingleValue,\r\n    ValueContainer,\r\n};\r\n","import React, {FC} from \"react\";\r\nimport {FormControl, FormHelperText, useTheme} from \"@material-ui/core\";\r\nimport {Field} from \"react-final-form\";\r\nimport Select from 'react-select';\r\nimport {useStyles} from \"./Autcomplete.styles\";\r\nimport {components} from \"./Components\";\r\n\r\ninterface AutocompleteProps {\r\n    name: string;\r\n    placeholder?: string;\r\n    options: Array<{ label: string, value: string }>\r\n    isMulti?: boolean\r\n}\r\n\r\nexport const Autocomplete: FC<AutocompleteProps> = ({options, name, isMulti = false, placeholder}) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const selectStyles = {\r\n        input: (base: any) => ({\r\n            ...base,\r\n            color: theme.palette.text.primary,\r\n            '& input': {\r\n                font: 'inherit',\r\n            },\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <Field name={name}>\r\n            {({input: {name, onChange, value, ...restInput}, meta}) => {\r\n                const isError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched;\r\n\r\n                return (\r\n                    <FormControl error={isError}>\r\n                        <Select\r\n                            classes={classes}\r\n                            styles={selectStyles}\r\n                            placeholder={placeholder}\r\n                            options={options}\r\n                            components={components}\r\n                            value={value}\r\n                            onChange={onChange}\r\n                            isMulti={isMulti}\r\n                        />\r\n                        <FormHelperText id=\"component-error-text\">{isError && meta.error}</FormHelperText>\r\n                    </FormControl>\r\n                )\r\n            }}\r\n        </Field>\r\n    )\r\n}","import React, {FC} from \"react\";\r\nimport {MainLayout} from \"../../../components/layout/MainLayout/MainLayout\";\r\nimport {Box, Button, CardActions, CardContent, makeStyles, Typography} from \"@material-ui/core\";\r\nimport {TextField} from \"../../../components/form/TextField\";\r\nimport {Form} from \"../../../components/form/Form/Form\";\r\nimport {MemoryFormProps, MemoryFormValues} from \"./MemoryForm.types\";\r\nimport {Map, Marker, TileLayer} from 'react-leaflet';\r\nimport * as Leaflet from \"leaflet\";\r\nimport {ImageField} from \"../../../components/form/ImageField\";\r\nimport {Autocomplete} from \"../../../components/form/Autocomplete/Autocomplete\";\r\n\r\nconst useStyles = makeStyles({\r\n        mapContainer: {\r\n            height: 400,\r\n            '& .leaflet-container': {\r\n                height: '100%',\r\n            }\r\n        },\r\n        actions: {\r\n            justifyContent: 'space-between'\r\n        }\r\n    })\r\n;\r\n\r\n\r\nexport const MemoryForm: FC<MemoryFormProps> = ({initialValues, onCancel, onDraftSave, onSave, friendsOptions}) => {\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (values: MemoryFormValues) => {\r\n        onSave(values)\r\n    };\r\n\r\n    const handleDraftSubmit = (values: MemoryFormValues) => {\r\n        onDraftSave(values)\r\n    }\r\n\r\n    return (\r\n        <MainLayout>\r\n            {initialValues &&\r\n            <Form<MemoryFormValues>\r\n                onSubmit={handleSubmit}\r\n                initialValues={initialValues}\r\n                mutators={{\r\n                    onMapClick: (args, state, tools) => {\r\n                        const event: Leaflet.LeafletMouseEvent = args[0];\r\n                        tools.changeValue(state, 'localization', () => event.latlng);\r\n                    },\r\n                }}\r\n            >\r\n                {(props) => {\r\n                    return (\r\n                        <>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    Dodaj wspomnienie\r\n                                </Typography>\r\n                                <Box flexDirection='column' display='flex'>\r\n\r\n                                    <Box mt={2} flexDirection='column' display='flex'>\r\n                                        <ImageField name='image' label=\"Zdjęcie\"/>\r\n                                    </Box>\r\n                                    <TextField name='title' label='Tytuł'/>\r\n                                    <TextField name='description' label=\"Opis\"/>\r\n\r\n                                    <Box className={classes.mapContainer}>\r\n                                        <Map center={props.values.localization} zoom={13}\r\n                                             onclick={props.form.mutators.onMapClick}>\r\n                                            <TileLayer\r\n                                                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                            />\r\n                                            {props.values.localization &&\r\n                                            <Marker position={props.values.localization}/>}\r\n                                        </Map>\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={2} flexDirection='column' display='flex'>\r\n                                        <Autocomplete\r\n                                            name='friends'\r\n                                            placeholder='Wybierz przyjaciół z którymi dzielisz wspomnienie'\r\n                                            options={friendsOptions}\r\n                                            isMulti={true}\r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                            </CardContent>\r\n                            <CardActions className={classes.actions}>\r\n                                <Button size=\"small\" variant='contained' color='secondary'\r\n                                        onClick={onCancel}>Anuluj</Button>\r\n                                <div>\r\n                                    <Button size=\"small\" variant='outlined' color='primary'\r\n                                            onClick={() => handleDraftSubmit(props.values)}>\r\n                                        Zapisz wersję roboczą\r\n                                    </Button>\r\n                                    <Button size=\"small\" variant='contained' color='primary'\r\n                                            type=\"submit\">Zapisz</Button>\r\n                                </div>\r\n                            </CardActions>\r\n                        </>\r\n                    )\r\n                }}\r\n            </Form>\r\n            }\r\n        </MainLayout>\r\n    )\r\n}","import {Request} from \"../common/Request\";\r\n\r\nexport const postMemory = (body: any) => Request({url: '/api/memory', method: 'POST', body});\r\n\r\nexport const getMemories = () => Request({url: '/api/memories', method: 'GET'});\r\n\r\nexport const getMemoriesDraft = () => Request({url: '/api/memories/draft', method: 'GET'});\r\nexport const postMemoryDraft = (body: any) => Request({url: '/api/memories/draft', method: 'POST', body});\r\nexport const putMemoryDraft = (body: any, id: string) => Request({\r\n    url: `/api/memories/draft/draft_id=${id}`,\r\n    method: 'PUT',\r\n    body\r\n});","import {Request} from \"../common/Request\";\r\n\r\n\r\nexport const getFriends = () => Request({url: '/api/friends', method: 'GET'});\r\n\r\nexport const deleteFriend = (id: string) => Request({url: `/api/friend/${id}`, method: 'DELETE'})\r\n\r\nexport const addFriend = (id: string) => Request({url: `/api/friend/${id}`, method: 'POST'})","import React, {FC, useEffect, useState} from \"react\";\r\nimport {MemoryForm} from \"../Form/MemoryForm\";\r\nimport {useHistory} from \"react-router\";\r\nimport {MEMORIES, MEMORIES_DRAFT} from \"../../../routing/routes\";\r\nimport {getMemories, postMemory, postMemoryDraft} from \"../../../requests/memories/actions\";\r\nimport {MemoryFormValues} from \"../Form/MemoryForm.types\";\r\nimport {getFriends} from \"../../../requests/friends/actions\";\r\nimport {User} from \"../../Users/User/User.types\";\r\n\r\nconst mapFormToPayload = (value: MemoryFormValues) => {\r\n    return {\r\n        ...value,\r\n        friends: value.friends.map((friend) => friend.value),\r\n        localization: {\r\n            latitude: value.localization && value.localization.lat,\r\n            longitude: value.localization && value.localization.lng,\r\n        }\r\n    }\r\n}\r\n\r\nexport const AddMemoryContainer: FC = () => {\r\n    const history = useHistory();\r\n    const [friends, setFriends] = useState<[]>([]);\r\n\r\n    const initialValues = {\r\n        localization: {lat: 50.270908, lng: 19.039993},\r\n        title: '',\r\n        description: '',\r\n        friends: [],\r\n        image: ''\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFriends().then((response) => {\r\n            setFriends(response.items.map((user: User) => ({\r\n                label: `${user.firstname} ${user.lastname}`,\r\n                value: user.username\r\n            })));\r\n        })\r\n    }, [getMemories]);\r\n\r\n\r\n    const handleDraftSave = (value: MemoryFormValues) => {\r\n        postMemoryDraft(mapFormToPayload(value)).then((response) => {\r\n            if (response.error)\r\n                return\r\n            history.push(MEMORIES_DRAFT);\r\n        })\r\n    }\r\n\r\n    const handleSave = (value: MemoryFormValues) => {\r\n        postMemory(mapFormToPayload(value)).then((response) => {\r\n            if (response.error)\r\n                return\r\n            history.push(MEMORIES);\r\n        })\r\n    }\r\n\r\n\r\n    return <MemoryForm initialValues={initialValues} onCancel={history.goBack} onDraftSave={handleDraftSave}\r\n                       onSave={handleSave} friendsOptions={friends}/>\r\n}","import React, {FC} from \"react\";\r\nimport {MainLayout} from \"../../../components/layout/MainLayout/MainLayout\";\r\nimport {Box, Button, CardActions, CardContent} from \"@material-ui/core\";\r\nimport {TextField} from \"../../../components/form/TextField\";\r\nimport {Form} from \"../../../components/form/Form/Form\";\r\nimport {ProfileFormProps, ProfileFormValues} from \"./ProfileForm.types\";\r\n\r\n\r\nexport const ProfileForm: FC<ProfileFormProps> = ({initialValues, onSave}) => {\r\n\r\n    return (\r\n        <MainLayout>\r\n            <Form<ProfileFormValues> onSubmit={onSave} initialValues={initialValues}>\r\n                {(props) => {\r\n                    return (\r\n                        <>\r\n                            <CardContent>\r\n                                <Box flexDirection='column' display='flex'>\r\n                                    <TextField name='firstname'/>\r\n                                    <TextField name='lastname'/>\r\n                                </Box>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\" variant='contained' color='primary' type=\"submit\">Zapisz</Button>\r\n                            </CardActions>\r\n                        </>\r\n                    )\r\n                }}\r\n            </Form>\r\n        </MainLayout>\r\n    )\r\n}","import React, {FC} from \"react\";\r\nimport {ProfileForm} from \"./ProfileForm\";\r\n\r\n\r\nexport const ProfileFormContainer: FC = () => {\r\n\r\n    const onSave = console.log;\r\n\r\n    const initialValues = {\r\n        firstname: 'aaa',\r\n        lastname: 'foo'\r\n    }\r\n\r\n    return <ProfileForm initialValues={initialValues} onSave={onSave}/>\r\n}","import React, {FC} from \"react\";\r\nimport {Box, Button, Grid, makeStyles, Paper, Typography} from \"@material-ui/core\";\r\nimport {Edit} from \"@material-ui/icons\";\r\nimport {SingleMemoryProps} from \"./SingleMemory.types\";\r\nimport {Map, Marker, TileLayer} from \"react-leaflet\";\r\n\r\nconst useStyles = makeStyles({\r\n        itemActions: {\r\n            display: 'flex'\r\n        },\r\n        image: {\r\n            maxHeight: '100%',\r\n            maxWidth: '100%',\r\n            margin: 10,\r\n        },\r\n        mapContainer: {\r\n            height: 200,\r\n            margin: 10,\r\n            '& .leaflet-container': {\r\n                height: '100%',\r\n            }\r\n        },\r\n        row: {\r\n            padding: 10,\r\n        }\r\n    })\r\n;\r\n\r\nexport const SingleMemory: FC<SingleMemoryProps> = ({isEditable, handleEdit, memory}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box mt={2}>\r\n            <Paper>\r\n                <Grid container direction='row' justify='space-between' className={classes.row}>\r\n                    <Grid item xs={3} sm={3}>\r\n                        {memory.image && <img src={`data:image/png;base64,${memory.image}`} className={classes.image}/>}\r\n                    </Grid>\r\n                    <Grid item xs={8} sm={8}>\r\n                        <Typography variant=\"h4\">\r\n                            {memory.title}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">\r\n                            {memory.description}\r\n                        </Typography>\r\n\r\n                        <Grid item xs={9} sm={9}>\r\n                            <Box className={classes.mapContainer}>\r\n                                <Map center={{lat: memory.localization.latitude, lng: memory.localization.longitude}}\r\n                                     zoom={13}>\r\n                                    <TileLayer\r\n                                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                    />\r\n                                    <Marker\r\n                                        position={{lat: memory.localization.latitude, lng: memory.localization.longitude}}/>}\r\n                                </Map>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid item alignItems='center' className={classes.itemActions}>\r\n                        {isEditable && <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<Edit/>}\r\n                            onClick={() => handleEdit(memory.id)}\r\n                            size='small'\r\n                        >\r\n                            Edytuj\r\n                        </Button>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}","import React, {FC} from \"react\";\r\nimport {MainLayout} from \"../../../components/layout/MainLayout/MainLayout\";\r\nimport {SingleMemory} from \"./SingleMemory/SingleMemory\";\r\nimport {ListProps} from \"./List.types\";\r\n\r\n\r\nexport const List: FC<ListProps> = ({memories, isDraft, handleEdit}) => {\r\n\r\n    return (\r\n        <MainLayout>\r\n            {memories.map(memory => (\r\n                <SingleMemory memory={memory} isEditable={isDraft} handleEdit={handleEdit}/>\r\n            ))}\r\n        </MainLayout>\r\n    )\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport {List} from \"./List\";\r\nimport {SingleMemory} from \"./SingleMemory/SingleMemory.types\";\r\nimport {getMemories} from \"../../../requests/memories/actions\";\r\nimport {useHistory} from \"react-router\";\r\nimport {LOGIN} from \"../../../routing/routes\";\r\n\r\n\r\nexport const ListContainer: FC = () => {\r\n    const history = useHistory();\r\n    const [memories, setMemories] = useState<SingleMemory[]>([]);\r\n\r\n    useEffect(() => {\r\n        getMemories().then((response) => {\r\n            console.log(response)\r\n            if (response.error)\r\n                history.push(LOGIN)\r\n            setMemories(response.items);\r\n\r\n        }).catch(e => {\r\n            console.log(e)\r\n        })\r\n    }, [getMemories]);\r\n\r\n\r\n    return <List memories={memories} isDraft={false} handleEdit={() => {\r\n    }}/>\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport {List} from \"./List\";\r\nimport {SingleMemory} from \"./SingleMemory/SingleMemory.types\";\r\nimport {getMemories, getMemoriesDraft} from \"../../../requests/memories/actions\";\r\nimport {LOGIN} from \"../../../routing/routes\";\r\nimport {useHistory} from \"react-router\";\r\n\r\n\r\nexport const DraftListContainer: FC = () => {\r\n    const history = useHistory();\r\n    const [memories, setMemories] = useState<SingleMemory[]>([]);\r\n\r\n    useEffect(() => {\r\n        getMemoriesDraft().then((response) => {\r\n            if (response.error)\r\n                history.push(LOGIN);\r\n            setMemories(response.items);\r\n        })\r\n    }, [getMemories]);\r\n\r\n    const handleEdit = (id: string) => history.push(`/memory/${id}`);\r\n\r\n    return <List memories={memories} isDraft={true} handleEdit={handleEdit}/>\r\n}","import React, {FC} from \"react\";\r\nimport {Box, Button, Grid, makeStyles, Paper, Typography} from \"@material-ui/core\";\r\nimport {UserProps} from \"./User.types\";\r\n\r\nconst useStyles = makeStyles({\r\n        itemActions: {\r\n            display: 'flex'\r\n        },\r\n        row: {\r\n            padding: 10\r\n        }\r\n    })\r\n;\r\n\r\nexport const User: FC<UserProps> = ({user, action, actionType, actionLabel}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box mt={2}>\r\n            <Paper>\r\n                <Grid container direction='row' justify='space-between' className={classes.row}>\r\n                    <Grid item xs={8} sm={8}>\r\n                        <Typography variant=\"h6\">\r\n                            {`${user.firstname} ${user.lastname}`}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.itemActions}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color={actionType}\r\n                            onClick={() => action(user.username)}\r\n                            size='small'\r\n                        >\r\n                            {actionLabel}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}","import React, {FC} from \"react\";\r\nimport {MainLayout} from \"../../components/layout/MainLayout/MainLayout\";\r\nimport {UsersProps} from \"./Users.types\";\r\nimport {User} from \"./User/User\";\r\n\r\n\r\nexport const Users: FC<UsersProps> = ({users, actionType, action, actionLabel}) => {\r\n\r\n    return (\r\n        <MainLayout>\r\n            {users.map(user => (<User user={user} actionType={actionType} action={action} actionLabel={actionLabel}/>))}\r\n        </MainLayout>\r\n    )\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Users} from \"../Users/Users\";\r\nimport {getMemories} from \"../../requests/memories/actions\";\r\nimport {deleteFriend, getFriends} from \"../../requests/friends/actions\";\r\nimport {User} from \"../Users/User/User.types\";\r\nimport {LOGIN} from \"../../routing/routes\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nexport const FriendsContainer: FC = () => {\r\n    const history = useHistory();\r\n    const [friends, setFriends] = useState<User[]>([]);\r\n\r\n    useEffect(() => {\r\n        getFriends().then((response) => {\r\n            if (response.error)\r\n                history.push(LOGIN);\r\n            setFriends(response.items);\r\n        })\r\n    }, [getMemories]);\r\n\r\n    const deleteExistingFriend = (id: string) => deleteFriend(id).then(() => {\r\n        getFriends().then((response) => {\r\n            if (response.error)\r\n                history.push(LOGIN);\r\n            setFriends(response.items);\r\n        })\r\n    })\r\n\r\n    return <Users action={deleteExistingFriend} actionType='secondary' users={friends} actionLabel={'Usuń ze znajomych'}/>\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {User} from \"./User/User.types\";\r\nimport {getMemories} from \"../../requests/memories/actions\";\r\nimport {getUsers} from \"../../requests/users/users\";\r\nimport {FRIENDS, LOGIN} from \"../../routing/routes\";\r\nimport {useHistory} from \"react-router\";\r\nimport {addFriend} from \"../../requests/friends/actions\";\r\n\r\nexport const UsersContainer: FC = () => {\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState<User[]>([]);\r\n\r\n    useEffect(() => {\r\n        getUsers().then((response) => {\r\n            if (response.error)\r\n                history.push(LOGIN);\r\n            setUsers(response.items);\r\n        })\r\n    }, [getMemories]);\r\n\r\n\r\n    const addNewFriend = (id: string) => addFriend(id).then(() => {\r\n        history.push(FRIENDS);\r\n    })\r\n\r\n    return <Users action={addNewFriend} actionType='primary' users={users} actionLabel={'Dodaj do znajomych'}/>\r\n}","import {Request} from \"../common/Request\";\r\n\r\nexport const getUsers = () => Request({url: '/api/users', method: 'GET'});","import React, {FC} from \"react\";\r\nimport {Box, Button, Card, CardActions, CardContent, Container, makeStyles, Typography} from \"@material-ui/core\";\r\nimport {TextField} from \"../../components/form/TextField\";\r\nimport {Form} from \"../../components/form/Form/Form\";\r\nimport {useHistory} from \"react-router\";\r\nimport {LoginForm} from \"../Login/Login.types\";\r\nimport {register} from \"../../requests/auth/actions\";\r\nimport {LOGIN} from \"../../routing/routes\";\r\nimport {RegisterForm} from \"./Register.types\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '100vh'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nexport const Register: FC = () => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (value: LoginForm) => {\r\n        register(value).then((response) => {\r\n            if (response.error) {\r\n                return;\r\n            } else {\r\n                history.push(LOGIN);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return <Container maxWidth=\"sm\" className={classes.container}>\r\n        <Card className={classes.card}>\r\n            <Form<RegisterForm> onSubmit={handleSubmit}\r\n                                initialValues={{username: '', password: '', firstname: '', lastname: ''}}>\r\n                {(props) => {\r\n                    return (\r\n                        <>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    Stwórz konto\r\n                                </Typography>\r\n                                <Box flexDirection='column' display='flex'>\r\n                                    <TextField name='username'/>\r\n                                    <TextField name='password'/>\r\n                                    <TextField name='firstname'/>\r\n                                    <TextField name='lastname'/>\r\n                                </Box>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\" variant='contained' color='primary' type=\"submit\">Zarejestruj się</Button>\r\n                            </CardActions>\r\n                        </>\r\n                    )\r\n                }}\r\n            </Form>\r\n        </Card>\r\n    </Container>\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport {MemoryForm} from \"../Form/MemoryForm\";\r\nimport {useHistory, useParams} from \"react-router\";\r\nimport {LOGIN, MEMORIES, MEMORIES_DRAFT} from \"../../../routing/routes\";\r\nimport {getMemoriesDraft, postMemory, putMemoryDraft} from \"../../../requests/memories/actions\";\r\nimport {MemoryFormValues} from \"../Form/MemoryForm.types\";\r\nimport {getFriends} from \"../../../requests/friends/actions\";\r\nimport {User} from \"../../Users/User/User.types\";\r\nimport {SingleMemory} from \"../List/SingleMemory/SingleMemory.types\";\r\n\r\nconst mapFormToPayload = (value: MemoryFormValues) => {\r\n    return {\r\n        ...value,\r\n        friends: value.friends.map((friend) => friend.value),\r\n        localization: {\r\n            latitude: value.localization && value.localization.lat.toString(),\r\n            longitude: value.localization && value.localization.lng.toString(),\r\n        }\r\n    }\r\n}\r\n\r\nexport const EditMemoryContainer: FC = () => {\r\n    const history = useHistory();\r\n    const params = useParams<{ id: string }>();\r\n    const [friends, setFriends] = useState<{ label: string, value: string }[]>([]);\r\n\r\n    const [initialValues, setInitialValues] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getFriends().then((response) => {\r\n            if (response.error)\r\n                history.push(LOGIN);\r\n\r\n            const localFriends: { label: string, value: string }[] = response.items.map((user: User) => ({\r\n                label: `${user.firstname} ${user.lastname}`,\r\n                value: user.username\r\n            }))\r\n\r\n            setFriends(localFriends);\r\n\r\n\r\n            getMemoriesDraft().then((response) => {\r\n                if (response.error)\r\n                    history.push(LOGIN);\r\n\r\n                const edited = response.items.find((item: SingleMemory) => item.id.toString() === params.id);\r\n                console.log(friends, edited);\r\n                setInitialValues({\r\n                    ...edited,\r\n                    localization: {\r\n                        lat: edited.localization.latitude,\r\n                        lng: edited.localization.longitude\r\n                    },\r\n                    friends: localFriends.filter(friend => edited.friends.includes(friend.value))\r\n                });\r\n            })\r\n        })\r\n    }, [getFriends]);\r\n\r\n\r\n    const handleDraftSave = (value: MemoryFormValues) => {\r\n        putMemoryDraft(mapFormToPayload(value), params.id).then((response) => {\r\n            if (response.error)\r\n                return\r\n            history.push(MEMORIES_DRAFT);\r\n        })\r\n    };\r\n\r\n    const handleSave = (value: MemoryFormValues) => {\r\n        postMemory(mapFormToPayload(value)).then((response) => {\r\n            if (response.error)\r\n                return\r\n            history.push(MEMORIES);\r\n        })\r\n    }\r\n\r\n\r\n    return <MemoryForm initialValues={initialValues} onCancel={history.goBack} onDraftSave={handleDraftSave}\r\n                       onSave={handleSave} friendsOptions={friends}/>\r\n}","import * as Routes from './routes';\r\nimport {Login} from \"../pages/Login/Login\";\r\nimport React, {FC} from \"react\";\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Profile} from \"../pages/Profile/Profile\";\r\nimport {AddMemoryContainer} from \"../pages/Memories/Add/AddMemoryContainer\";\r\nimport {ProfileFormContainer} from \"../pages/Profile/ProfileForm/ProfileFormContainer\";\r\nimport {ListContainer} from \"../pages/Memories/List/ListContainer\";\r\nimport {DraftListContainer} from \"../pages/Memories/List/DraftListContainer\";\r\nimport {FriendsContainer} from \"../pages/Friends/FriendsContainer\";\r\nimport {UsersContainer} from \"../pages/Users/UsersContainer\";\r\nimport {Register} from \"../pages/Register/Register\";\r\nimport {EditMemoryContainer} from \"../pages/Memories/Edit/EditMemoryContainer\";\r\n\r\n\r\nexport const Routing: FC = () => {\r\n    return (\r\n        <Router basename={'/friendship-diary-spa'}>\r\n            <Switch>\r\n                <Route exact path={Routes.LOGIN} component={Login}/>\r\n                <Route exact path={Routes.REGISTER} component={Register}/>\r\n                <Route exact path={Routes.PROFILE} component={Profile}/>\r\n                <Route exact path={Routes.PROFILE_EDIT} component={ProfileFormContainer}/>\r\n                <Route exact path={Routes.ADD_MEMORY} component={AddMemoryContainer}/>\r\n                <Route exact path={Routes.MEMORIES} component={ListContainer}/>\r\n                <Route exact path={Routes.MEMORIES_DRAFT} component={DraftListContainer}/>\r\n                <Route exact path={Routes.EDIT_MEMORY} component={EditMemoryContainer}/>\r\n                <Route exact path={Routes.FRIENDS} component={FriendsContainer}/>\r\n                <Route exact path={Routes.USERS} component={UsersContainer}/>\r\n                <Redirect to={Routes.LOGIN}/>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport {CssBaseline} from \"@material-ui/core\";\r\nimport {Routing} from \"./routing/Routing\";\r\n\r\n\r\nexport const App: React.FC = () => {\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Routing/>\r\n        </>\r\n    );\r\n}\r\n"],"sourceRoot":""}